/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number}
 */
//I create new array, comparing two elements in the end of nums1, nums2
//arrays are sorted, therefore I get new sorted array merging nums1 and nums2
//complexity: O(n+m), where n = nums1.length and m = nums2.length
var findMedianSortedArrays = function(nums1, nums2) {
    let result = [];
    while( nums1.length || nums2.length ) {
        if( nums1.length && nums2.length ) {
            let n1 = nums1.length-1,
                n2 = nums2.length-1;
            if( nums1[n1] > nums2[n2] ) result.push(nums1.pop());
            else result.push(nums2.pop());
        } else if( nums1.length ) result.push(nums1.pop());
        else if( nums2.length ) result.push(nums2.pop());
    }
    if( result.length % 2 ) return result[Math.floor(result.length/2)];
    else return (result[result.length/2-1] + result[result.length/2])/2;
};
